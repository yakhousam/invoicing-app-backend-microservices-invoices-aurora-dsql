AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: invoices-microservice-aurora-dsql

Parameters:
  UserPoolId:
    Type: String
    Description: User Pool ID for cognito provider
  UserPoolClientId:
    Type: String
    Description: Client ID for user pool
  DsqlClusterUrl:
    Type: String
    Description: URL for DSQL cluster
  DsqlClusterArn:
    Type: String
    Description: ARN for DSQL cluster

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 100
    MemorySize: 128
    Architectures:
      - x86_64
    Environment:
      Variables:
        DSQL_CLUSTER_URL: !Ref DsqlClusterUrl
        REGION: !Ref "AWS::Region"
        userId: ""
        authToken: ""
        NODE_ENV: "production"

Resources:
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        DefaultAuthorizer: GeneralAuth
        Authorizers:
          GeneralAuth:
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              audience:
                - !Ref UserPoolClientId
              issuer: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPoolId}
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - OPTIONS
          - PATCH
          - DELETE
        AllowOrigins:
          - "http://localhost:3001"
        AllowHeaders:
          - Content-Type
          - Authorization

  postInvoiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: postInvoice.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - "dsql:DbConnectAdmin"
              Resource: !Ref DsqlClusterArn
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /
            Method: POST
            ApiId: !Ref HttpApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - functions/postInvoice.ts

  getAllInvoicesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: getAllInvoices.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - "dsql:DbConnectAdmin"
              Resource: !Ref DsqlClusterArn
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
            ApiId: !Ref HttpApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - functions/getAllInvoices.ts

  getInvoiceByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: getInvoiceById.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - "dsql:DbConnectAdmin"
              Resource: !Ref DsqlClusterArn
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /{invoiceId}
            Method: GET
            ApiId: !Ref HttpApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - functions/getInvoiceById.ts

  updateInvoiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: updateInvoice.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - "dsql:DbConnectAdmin"
              Resource: !Ref DsqlClusterArn
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /{invoiceId}
            Method: PATCH
            ApiId: !Ref HttpApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - functions/updateInvoice.ts

  deleteInvoiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs
      Handler: deleteInvoice.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - "dsql:DbConnectAdmin"
              Resource: !Ref DsqlClusterArn
      Events:
        RootGet:
          Type: HttpApi
          Properties:
            Path: /{invoiceId}
            Method: DELETE
            ApiId: !Ref HttpApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - functions/deleteInvoice.ts

Outputs:
  HttpApi:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
